"use strict";(self.webpackChunklemon_script_documentation=self.webpackChunklemon_script_documentation||[]).push([[297],{3905:function(n,t,e){e.d(t,{Zo:function(){return l},kt:function(){return m}});var r=e(7294);function o(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function u(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){o(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function c(n,t){if(null==n)return{};var e,r,o=function(n,t){if(null==n)return{};var e,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(o[e]=n[e]);return o}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(o[e]=n[e])}return o}var a=r.createContext({}),p=function(n){var t=r.useContext(a),e=t;return n&&(e="function"==typeof n?n(t):u(u({},t),n)),e},l=function(n){var t=p(n.components);return r.createElement(a.Provider,{value:t},n.children)},s={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(n,t){var e=n.components,o=n.mdxType,i=n.originalType,a=n.parentName,l=c(n,["components","mdxType","originalType","parentName"]),f=p(e),m=o,d=f["".concat(a,".").concat(m)]||f[m]||s[m]||i;return e?r.createElement(d,u(u({ref:t},l),{},{components:e})):r.createElement(d,u({ref:t},l))}));function m(n,t){var e=arguments,o=t&&t.mdxType;if("string"==typeof n||o){var i=e.length,u=new Array(i);u[0]=f;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=n,c.mdxType="string"==typeof n?n:o,u[1]=c;for(var p=2;p<i;p++)u[p]=e[p];return r.createElement.apply(null,u)}return r.createElement.apply(null,e)}f.displayName="MDXCreateElement"},4629:function(n,t,e){e.r(t),e.d(t,{frontMatter:function(){return c},contentTitle:function(){return a},metadata:function(){return p},toc:function(){return l},default:function(){return f}});var r=e(7462),o=e(3366),i=(e(7294),e(3905)),u=["components"],c={},a="Print Function",p={unversionedId:"documentation/inbuilt-functions/print",id:"documentation/inbuilt-functions/print",isDocsHomePage:!1,title:"Print Function",description:"To output a value in the console, you can use the print function with this syntax:",source:"@site/docs/documentation/inbuilt-functions/print.md",sourceDirName:"documentation/inbuilt-functions",slug:"/documentation/inbuilt-functions/print",permalink:"/LemonScript/docs/documentation/inbuilt-functions/print",editUrl:"https://github.com/PlebusSupremus1234/LemonScript/website/docs/documentation/inbuilt-functions/print.md",version:"current",frontMatter:{},sidebar:"documentation",previous:{title:"For Loop",permalink:"/LemonScript/docs/documentation/loops/for-loop"},next:{title:"Typeof Function",permalink:"/LemonScript/docs/documentation/inbuilt-functions/typeof"}},l=[],s={toc:l};function f(n){var t=n.components,e=(0,o.Z)(n,u);return(0,i.kt)("wrapper",(0,r.Z)({},s,e,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"print-function"},"Print Function"),(0,i.kt)("p",null,"To output a value in the console, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"print")," function with this syntax:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"print([value])\n")),(0,i.kt)("p",null,"The print function can take 1 - 255 arguments. The values can be any value or expression. You can add multiple arguments to the print function, and it'll print all of them into the terminal split by spaces. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var a = 5\nvar b = 6\n\nprint(a, b, a + b)\n")),(0,i.kt)("p",null,"This will output ",(0,i.kt)("inlineCode",{parentName:"p"},"5 6 11")," in the terminal."))}f.isMDXComponent=!0}}]);